From 47fe69f8586def78282f4e89590643cdb41a3315 Mon Sep 17 00:00:00 2001
From: Chuanxiao Dong <chuanxiao.dong@intel.com>
Date: Sat, 9 Mar 2024 18:42:13 +0800
Subject: [PATCH 09/25] KVM: TDX: Reclaim all the allocated L2 SEPT pages

With TD partitioning enabled TD, there may have L2 SEPT pages allocated
at the runtime. When free VM with HKID released, L2 TD is not running
and host VMM should reclaim all the allocated L2 SEPT pages.

Signed-off-by: Chuanxiao Dong <chuanxiao.dong@intel.com>
---
 arch/x86/kvm/vmx/tdx.c | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/arch/x86/kvm/vmx/tdx.c b/arch/x86/kvm/vmx/tdx.c
index 29a289a13b8f..0bb52ac85d54 100644
--- a/arch/x86/kvm/vmx/tdx.c
+++ b/arch/x86/kvm/vmx/tdx.c
@@ -601,6 +601,23 @@ void tdx_mmu_release_hkid(struct kvm *kvm)
 		;
 }
 
+static void td_partitioning_cleanup(struct kvm_tdx *kvm_tdx)
+{
+	struct l2sept_header *p, *n;
+	struct list_head *head;
+	int i;
+
+	for (i = 0; i < MAX_NUM_L2_VMS; i++) {
+		head = &kvm_tdx->l2sept_list[i].head;
+		list_for_each_entry_safe(p, n, head, node) {
+			if (WARN_ON(tdx_reclaim_page(__pa(p->page_va), PG_LEVEL_4K)))
+				continue;
+			list_del(&p->node);
+			free_l2sept_header(p);
+		}
+	}
+}
+
 void tdx_vm_free(struct kvm *kvm)
 {
 	struct kvm_tdx *kvm_tdx = to_kvm_tdx(kvm);
@@ -615,6 +632,8 @@ void tdx_vm_free(struct kvm *kvm)
 	if (is_hkid_assigned(kvm_tdx))
 		return;
 
+	td_partitioning_cleanup(kvm_tdx);
+
 	if (kvm_tdx->tdcs_pa) {
 		for (i = 0; i < kvm_tdx->nr_tdcs_pages; i++) {
 			if (kvm_tdx->tdcs_pa[i])
-- 
2.34.1

